<?php

namespace app\index\model;

use think\Model;

class Jobs extends Model
{
    //
  public function save($data = [], $where = [], $sequence = null)
  {
    return parent::save($data, $where, $sequence); // TODO: Change the autogenerated stub
  }

  public function add(){
    $post_data = input('post.');
    try{
      if ($post_data['town']>0 || $post_data['town']){
          $post_data['current_p'] = $post_data['province'];
          $post_data['current_c'] = $post_data['city'];
          $post_data['current_t'] = $post_data['town'];
      }elseif($post_data['city']>0 || $post_data['city']){
          $post_data['current_p'] = $post_data['province'];
          $post_data['current_c'] = $post_data['city'];
      }else{
        jsonResponse(-1,'','请填写现居地地址');
      }
      if ($post_data['town1']>0 || $post_data['town1']){
          $post_data['household_p'] = $post_data['province1'];
          $post_data['household_c'] = $post_data['city1'];
          $post_data['household_t'] = $post_data['town1'];

      }elseif($post_data['city1']>0 || $post_data['city1']){
          $post_data['household_p'] = $post_data['province1'];
          $post_data['household_c'] = $post_data['city1'];
      }else{
        jsonResponse(-1,'','请填写户籍所在地址');
      }
      if ($post_data['town2']>0 || $post_data['town2']){
        $job_area = $post_data['province2'].','.$post_data['city2'].','.$post_data['town2'];
          $post_data['push_addr_p'] = $post_data['province2'];
          $post_data['push_addr_c'] = $post_data['city2'];
          $post_data['push_addr_t'] = $post_data['town2'];
      }elseif($post_data['city2']>0 || $post_data['city2']){
          $post_data['push_addr_p'] = $post_data['province2'];
          $post_data['push_addr_c'] = $post_data['city2'];
      }else{
        jsonResponse(-1,'','请填写求职地区');
      }
      if ($post_data['birth_date_y'] && $post_data['birth_date_m']){
        $birth_date = $post_data['birth_date_y'].'-'.$post_data['birth_date_m'];
      }else{
        jsonResponse(-1,'','出生日期不能为空');
      }
      if (!array_key_exists('img',$post_data)){
        $img = '';
      }else{
        $img = implode(',',$post_data['img']);
      }

      $validate = new \think\Validate;
      $validate->rule([
        'job_title|标题' => 'require|chsDash|max:100',
        'gender|性别' => 'require|between:1,2',
        'education|最高学历' => 'require|between:1,7',
        'hands|工作经验' => 'require|between:1,6',
        'contacts|联系人' => 'require',
        'phone|手机号' => 'require|/^[1]([3-9])[0-9]{9}$/',
        'jobs_type|求职类型' => 'require',
        'exp_pos_type|期望职位类别' => 'require',
        'exp_work|期望工作' => 'require',
        'exp_pos|期望职位' => 'require',
        'salary|期望薪资' => 'require|between:1,6',
        'push_indu|推送行业' => 'require',
        'release_time|发布时长' => 'require|between:1,6',
      ]);
      if ($validate->check($post_data)) {
        $post_data['user_id'] = session("?user_id")?session("user_id"):0;
        $post_data['job_area'] =  $job_area;
        $post_data['birth_date'] =  $birth_date;
        $post_data['photo'] =  $img;
        $post_data['create_time'] = time();
        $post_data['update_time'] = time();
        $post_data['status'] = 0;
        $post_data['see_level'] = !isset($post_data['see_level'])?$post_data['see_level']:1;
        $res = $this->allowField(true)->save($post_data);
        if ($res)
          jsonResponse(1,$this->id,'成功');
        else
          jsonResponse(-1,'','失败');
      } else {
        jsonResponse(-1, '', $validate->getError());
      }
    }catch (\Exception $e){
      return jsonResponse(-1,'',$e->getMessage());
    }
  }
}
